-------- Excel VBA：フォルダ内のファイルリストを作成｜サイズや日時も ------------
Option Explicit

'Excel VBAでフォルダ内のファイルリストを作成
Private Sub ExGetFileList(strPath As String, lRow As Long)
    Dim tSfo As Object
    Dim tGf As Object
    Dim tFi As Object
    Dim tSub As Object
    
    Set tSfo = CreateObject("Scripting.FileSystemObject")
    Set tGf = tSfo.GetFolder(strPath)
    For Each tFi In tGf.Files
        'ファイル名
        Cells(lRow, 2) = tFi.Name
        'パス内に含まれるファイルの拡張子を除いたものを取得
        Cells(lRow, 3) = tSfo.GetBaseName(tFi.Path)
        'ファイルの拡張子
        Cells(lRow, 4) = tSfo.GetExtensionName(tFi.Path)
        'フォルダ名
        Cells(lRow, 5) = tFi.ParentFolder.Path
        'ファイルサイズ KByte
        Cells(lRow, 6) = Int(tFi.Size / 1024)
        '作成された日付・時刻
        Cells(lRow, 7) = tFi.DateCreated
        'ファイルの最終更新された日付・時刻
        Cells(lRow, 8) = tFi.DateLastModified
        'ファイルの最終アクセスの日付・時刻
        Cells(lRow, 9) = tFi.DateLastAccessed
        lRow = lRow + 1
    Next
  
    For Each tSub In tGf.SubFolders
        ExGetFileList tSub.Path, lRow
    Next
End Sub

Private Sub CommandButton1_Click()
    ExGetFileList "e:\mydir", 4
End Sub
-------- Dir関数でサブフォルダも含むファイル一覧を取得するVBA ------------
Function GetFileList(ByVal argDir As String) As String()
  Dim i As Long
  Dim aryDir() As String
  Dim aryFile() As String
  Dim strName As String

  ReDim aryDir(i)
  aryDir(i) = argDir '引数のフォルダを配列の先頭に入れる
  
  'まずは、指定フォルダ以下の全サブフォルダを取得し、配列aryDirに入れます。
  i = 0
  Do
    strName = Dir(aryDir(i) & "\", vbDirectory)
    Do While strName <> ""
      If GetAttr(aryDir(i) & "\" & strName) And vbDirectory Then
        If strName <> "." And strName <> ".." Then
          ReDim Preserve aryDir(UBound(aryDir) + 1)
          aryDir(UBound(aryDir)) = aryDir(i) & "\" & strName
        End If
      End If
      strName = Dir()
    Loop
    i = i + 1
    If i > UBound(aryDir) Then Exit Do
  Loop
  
  '配列aryDirの全フォルダについて、ファイルを取得し、配列aryFileに入れます。
  ReDim aryFile(0)
  For i = 0 To UBound(aryDir)
    strName = Dir(aryDir(i) & "\", vbNormal + vbHidden + vbReadOnly + vbSystem)
    Do While strName <> ""
      If aryFile(0) <> "" Then
        ReDim Preserve aryFile(UBound(aryFile) + 1)
      End If
      aryFile(UBound(aryFile)) = aryDir(i) & "\" & strName
      '実行結果が分かりやすいように、テスト的にセルに書き出す場合
      'Cells(UBound(aryFile) + 1, 1) = aryFile(UBound(aryFile))
      strName = Dir()
    Loop
  Next
  
  GetFileList = aryFile
End Function
-------- 全シートのカーソルをA1に移動するマクロ --
Sub A1move()
    Dim sht                     As Worksheet            '// 処理中のワークシート
    Dim shtVisible                                      '// 表示可能なワークシート
    Dim iRow, iCol                                      '// 縦、横座標
    Dim sHiddenSheet                                    '// 非表示シート名
    Dim oFilterStatus           As AutoFilter           '// オートフィルタ状態
    Dim oRangeFilter            As Range                '// オートフィルタ設定

    For Each sht In Worksheets
        If (IsEmpty(shtVisible) = True) And (sht.Visible = xlSheetVisible) Then
            Set shtVisible = sht
        End If

        '// シートが表示されている場合
        If sht.Visible = xlSheetVisible Then
            Call A1(sht)
        '// シートが非表示の場合
        Else
            sHiddenSheet = sHiddenSheet & "、" & sht.Name
            sht.Visible = xlSheetVisible
            Call A1(sht)
            sht.Visible = xlSheetHidden
        End If
    Next

    shtVisible.Select

    If (sHiddenSheet <> "") Then
        MsgBox sHiddenSheet, vbOKOnly, "非表示シートあり"
    End If
End Sub

Sub A1(ByVal sht As Worksheet)
        sht.Select

        '// ウインドウ枠の固定がされている場合
        If ActiveWindow.FreezePanes = True Then
            iRow = ActiveWindow.SplitRow + 1
            iCol = ActiveWindow.SplitColumn + 1
            Cells(iRow + 1, iCol + 1).Activate
        End If

        Set oFilterStatus = sht.AutoFilter
        '// オートフィルタが設定されている場合
        If Not oFilterStatus Is Nothing Then
            '// フィルタが掛かっている場合
            If oFilterStatus.FilterMode = True Then
                '// フィルタが掛かっている行の先頭を選択
                Set oRangeFilter = Range("A1").CurrentRegion
                Set oRangeFilter = Application.Intersect(oRangeFilter, oRangeFilter.Offset(1, 0))
                Set oRangeFilter = oRangeFilter.SpecialCells(xlCellTypeVisible)
                Range("A" & CStr(oRangeFilter.Row)).Select
            End If
        End If

        sht.Range("A1").Select
        ActiveWindow.Zoom = 100

        ActiveCell.Activate         ' Excel97対策
        ' スクロール列の設定
        ActiveWindow.ScrollColumn = 1
        ' スクロール行の設定
        ActiveWindow.ScrollRow = 1

End Sub
----------
